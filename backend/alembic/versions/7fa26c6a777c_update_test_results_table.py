"""update_test_results_table

Revision ID: 7fa26c6a777c
Revises: 
Create Date: 2025-04-22 16:09:30.191936

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7fa26c6a777c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_certificates_id', table_name='certificates')
    op.drop_table('certificates')
    op.add_column('test_results', sa.Column('total_questions', sa.Integer(), nullable=True))
    op.add_column('test_results', sa.Column('correct_answers', sa.Integer(), nullable=True))
    op.add_column('test_results', sa.Column('time_spent', sa.String(), nullable=True))
    op.add_column('test_results', sa.Column('start_time', sa.DateTime(), nullable=True))
    op.add_column('test_results', sa.Column('end_time', sa.DateTime(), nullable=True))
    op.add_column('test_results', sa.Column('is_unlocked', sa.Boolean(), nullable=True))
    op.add_column('test_results', sa.Column('pdf_path', sa.String(), nullable=True))
    op.add_column('test_results', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.alter_column('test_results', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('test_results', 'score',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               nullable=True)
    op.create_index(op.f('ix_test_results_email'), 'test_results', ['email'], unique=False)
    op.drop_column('test_results', 'completion_time')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('test_results', sa.Column('completion_time', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_test_results_email'), table_name='test_results')
    op.alter_column('test_results', 'score',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               nullable=False)
    op.alter_column('test_results', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('test_results', 'created_at')
    op.drop_column('test_results', 'pdf_path')
    op.drop_column('test_results', 'is_unlocked')
    op.drop_column('test_results', 'end_time')
    op.drop_column('test_results', 'start_time')
    op.drop_column('test_results', 'time_spent')
    op.drop_column('test_results', 'correct_answers')
    op.drop_column('test_results', 'total_questions')
    op.create_table('certificates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_result_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('download_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['test_result_id'], ['test_results.id'], name='certificates_test_result_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='certificates_pkey')
    )
    op.create_index('ix_certificates_id', 'certificates', ['id'], unique=False)
    # ### end Alembic commands ###
